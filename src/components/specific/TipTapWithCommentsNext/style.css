/* global styles */

:root {
  --white: #fff;
  --black: #2e2b29;
  --black-contrast: #110f0e;
  --gray-1: rgba(61, 37, 20, 0.05);
  --gray-2: rgba(61, 37, 20, 0.08);
  --gray-3: rgba(61, 37, 20, 0.12);
  --gray-4: rgba(53, 38, 28, 0.3);
  --gray-5: rgba(28, 25, 23, 0.6);
  --green: #22c55e;
  --purple: #6a00f5;
  --purple-contrast: #5800cc;
  --purple-light: rgba(88, 5, 255, 0.05);
  --yellow-contrast: #facc15;
  --yellow: rgba(250, 204, 21, 0.4);
  --yellow-light: #fffae5;
  --red: #ff5c33;
  --red-light: #ffebe5;
  --red-light-contrast: #ffd6cc;
  --shadow: 0px 12px 33px 0px rgba(0, 0, 0, 0.06), 0px 3.618px 9.949px 0px rgba(0, 0, 0, 0.04);
}

.tiptap-comments-test-editor {
  *,
  *:before,
  *:after {
    box-sizing: border-box;
  }

  :first-child {
    margin-top: 0;
  }

  .tiptap {
    caret-color: var(--purple);
    margin: 1.5rem;
  }

  .tiptap:focus {
    outline: none;
  }

  ::-webkit-scrollbar {
    height: 14px;
    width: 14px;
  }

  ::-webkit-scrollbar-track {
    background-clip: padding-box;
    background-color: transparent;
    border: 4px solid transparent;
    border-radius: 8px;
  }

  ::-webkit-scrollbar-thumb {
    background-clip: padding-box;
    background-color: #0000;
    border: 4px solid rgba(0, 0, 0, 0);
    border-radius: 8px;
  }

  :hover::-webkit-scrollbar-thumb {
    background-color: #0000001a;
  }

  ::-webkit-scrollbar-thumb:hover {
    background-color: #00000026;
  }

  ::-webkit-scrollbar-button {
    display: none;
    height: 0;
    width: 0;
  }

  ::-webkit-scrollbar-corner {
    background-color: transparent;
  }

  button,
  input,
  select,
  textarea {
    background: var(--gray-2);
    border-radius: 0.5rem;
    border: none;
    color: var(--black);
    font-family: inherit;
    font-size: 0.875rem;
    font-weight: 500;
    line-height: 1.15;
    margin: none;
    padding: 0.375rem 0.625rem;
    transition: all 0.2s cubic-bezier(0.65, 0.05, 0.36, 1);
  }

  button:hover,
  input:hover,
  select:hover,
  textarea:hover {
    background-color: var(--gray-3);
    color: var(--black-contrast);
  }

  button[disabled],
  input[disabled],
  select[disabled],
  textarea[disabled] {
    background: var(--gray-1);
    color: var(--gray-4);
  }

  button:checked,
  input:checked,
  select:checked,
  textarea:checked {
    accent-color: var(--purple);
  }

  button.primary,
  input.primary,
  select.primary,
  textarea.primary {
    background: var(--black);
    color: var(--white);
  }

  button.primary:hover,
  input.primary:hover,
  select.primary:hover,
  textarea.primary:hover {
    background-color: var(--black-contrast);
  }

  button.primary[disabled],
  input.primary[disabled],
  select.primary[disabled],
  textarea.primary[disabled] {
    background: var(--gray-1);
    color: var(--gray-4);
  }

  button.is-active,
  input.is-active,
  select.is-active,
  textarea.is-active {
    background: var(--purple);
    color: var(--white);
  }

  button.is-active:hover,
  input.is-active:hover,
  select.is-active:hover,
  textarea.is-active:hover {
    background-color: var(--purple-contrast);
    color: var(--white);
  }

  button:not([disabled]),
  select:not([disabled]) {
    cursor: pointer;
  }

  input[type='text'],
  textarea {
    background-color: unset;
    border: 1px solid var(--gray-3);
    border-radius: 0.5rem;
    color: var(--black);
  }

  input[type='text']::-moz-placeholder,
  textarea::-moz-placeholder {
    color: var(--gray-4);
  }

  input[type='text']::placeholder,
  textarea::placeholder {
    color: var(--gray-4);
  }

  input[type='text']:hover,
  textarea:hover {
    background-color: unset;
    border-color: var(--gray-4);
  }

  input[type='text']:focus-visible,
  input[type='text']:focus,
  textarea:focus-visible,
  textarea:focus {
    border-color: var(--purple);
    outline: none;
  }

  select {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="Gray" d="M7 10l5 5 5-5z"/></svg>');
    background-repeat: no-repeat;
    background-position: right 0.1rem center;
    background-size: 1.25rem 1.25rem;
    padding-right: 1.25rem;
  }

  select:focus {
    outline: 0;
  }

  form {
    align-items: flex-start;
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .hint {
    align-items: center;
    background-color: var(--yellow-light);
    border-radius: 0.5rem;
    border: 1px solid var(--gray-2);
    display: flex;
    flex-direction: row;
    font-size: 0.75rem;
    gap: 0.25rem;
    line-height: 1.15;
    padding: 0.3rem 0.5rem;
  }

  .hint.purple-spinner,
  .hint.error {
    justify-content: center;
    text-align: center;
    width: 100%;
  }

  .hint .badge {
    background-color: var(--gray-1);
    border: 1px solid var(--gray-3);
    border-radius: 2rem;
    color: var(--gray-5);
    font-size: 0.625rem;
    font-weight: 700;
    line-height: 1;
    padding: 0.25rem 0.5rem;
  }

  .hint.purple-spinner {
    background-color: var(--purple-light);
  }

  .hint.purple-spinner:after {
    content: '';
    background-image: url("data:image/svg+xml;utf8,<svg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='28px' height='30px' viewBox='0 0 24 30' style='enable-background:new 0 0 50 50;' xml:space='preserve'><rect x='0' y='10' width='6' height='10' fill='%236A00F5' rx='3' ry='3'><animateTransform attributeType='xml' attributeName='transform' type='translate' values='0 0; 0 5; 0 -5; 0 0' begin='0' dur='0.6s' repeatCount='indefinite'/></rect><rect x='10' y='10' width='6' height='10' fill='%236A00F5' rx='3' ry='3'><animateTransform attributeType='xml' attributeName='transform' type='translate' values='0 0; 0 5; 0 -5; 0 0' begin='0.2s' dur='0.6s' repeatCount='indefinite'/></rect><rect x='20' y='10' width='6' height='10' fill='%236A00F5' rx='3' ry='3'><animateTransform attributeType='xml' attributeName='transform' type='translate' values='0 0; 0 5; 0 -5; 0 0' begin='0.4s' dur='0.6s' repeatCount='indefinite'/></rect></svg>");
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    height: 1rem;
    width: 1rem;
  }

  .hint.error {
    background-color: var(--red-light);
  }

  .label,
  .label-small,
  .label-large {
    color: var(--black);
    font-size: 0.8125rem;
    font-weight: 500;
    line-height: 1.15;
  }

  .label-small {
    color: var(--gray-5);
    font-size: 0.75rem;
    font-weight: 400;
  }

  .label-large {
    font-size: 0.875rem;
    font-weight: 700;
  }

  hr {
    border: none;
    border-top: 1px solid var(--gray-3);
    margin: 0;
    width: 100%;
  }

  kbd {
    background-color: var(--gray-2);
    border: 1px solid var(--gray-2);
    border-radius: 0.25rem;
    font-size: 0.6rem;
    line-height: 1.15;
    padding: 0.1rem 0.25rem;
    text-transform: uppercase;
  }

  #app,
  .container {
    display: flex;
    flex-direction: column;
  }

  .button-group {
    display: flex;
    flex-wrap: wrap;
    gap: 0.25rem;
  }

  .control-group {
    align-items: flex-start;
    background-color: var(--white);
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 1.5rem;
  }

  .control-group .sticky {
    position: sticky;
    top: 0;
  }

  [data-node-view-wrapper] > .control-group {
    padding: 0;
  }

  .flex-row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: space-between;
    width: 100%;
  }

  .switch-group {
    align-items: center;
    background: var(--gray-2);
    border-radius: 0.5rem;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    flex: 0 1 auto;
    justify-content: flex-start;
    padding: 0.125rem;
  }

  .switch-group label {
    align-items: center;
    border-radius: 0.375rem;
    color: var(--gray-5);
    cursor: pointer;
    display: flex;
    flex-direction: row;
    font-size: 0.75rem;
    font-weight: 500;
    gap: 0.25rem;
    line-height: 1.15;
    min-height: 1.5rem;
    padding: 0 0.375rem;
    transition: all 0.2s cubic-bezier(0.65, 0.05, 0.36, 1);
  }

  .switch-group label:has(input:checked) {
    background-color: var(--white);
    color: var(--black-contrast);
  }

  .switch-group label:hover {
    color: var(--black);
  }

  .switch-group label input {
    display: none;
    margin: unset;
  }

  .output-group {
    background-color: var(--gray-1);
    display: flex;
    flex-direction: column;
    font-family: JetBrainsMono, monospace;
    font-size: 0.75rem;
    gap: 1rem;
    margin-top: 2.5rem;
    padding: 1.5rem;
  }

  .output-group label {
    color: var(--black);
    font-size: 0.875rem;
    font-weight: 700;
    line-height: 1.15;
  }
}

/* specific styles */

/* Basic editor styles */
.tiptap {
  :first-child {
    margin-top: 0;
  }

  /* List styles */
  ul,
  ol {
    padding: 0 1rem;
    margin: 1.25rem 1rem 1.25rem 0.4rem;

    li p {
      margin-top: 0.25em;
      margin-bottom: 0.25em;
    }
  }

  /* Heading styles */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    line-height: 1.1;
    margin-top: 2.5rem;
    text-wrap: pretty;
  }

  h1,
  h2 {
    margin-top: 3.5rem;
    margin-bottom: 1.5rem;
  }

  h1 {
    font-size: 1.4rem;
  }

  h2 {
    font-size: 1.2rem;
  }

  h3 {
    font-size: 1.1rem;
  }

  h4,
  h5,
  h6 {
    font-size: 1rem;
  }

  /* Code and preformatted text styles */
  code {
    background-color: var(--purple-light);
    border-radius: 0.4rem;
    color: var(--black);
    font-size: 0.85rem;
    padding: 0.25em 0.3em;
  }

  pre {
    background: var(--black);
    border-radius: 0.5rem;
    color: var(--white);
    font-family: 'JetBrainsMono', monospace;
    margin: 1.5rem 0;
    padding: 0.75rem 1rem;

    code {
      background: none;
      color: inherit;
      font-size: 0.8rem;
      padding: 0;
    }
  }

  blockquote {
    border-left: 3px solid var(--gray-3);
    margin: 1.5rem 0;
    padding-left: 1rem;
  }

  hr {
    border: none;
    border-top: 1px solid var(--gray-2);
    margin: 2rem 0;
  }

  /* Placeholder */
  .is-empty::before {
    color: var(--gray-4);
    content: attr(data-placeholder);
    float: left;
    height: 0;
    pointer-events: none;
  }

  /* Image styling */
  img {
    display: block;
    height: auto;
    margin: 1.5rem 0;
    max-width: 100%;

    &.ProseMirror-selectednode {
      outline: 3px solid var(--purple);
    }
  }

  p {
    word-break: break-all;
  }

  /* Give a remote user a caret */
  .collaboration-cursor__caret {
    border-left: 1px solid #0d0d0d;
    border-right: 1px solid #0d0d0d;
    margin-left: -1px;
    margin-right: -1px;
    pointer-events: none;
    position: relative;
    word-break: normal;
  }

  /* Render the username above the caret */
  .collaboration-cursor__label {
    border-radius: 3px 3px 3px 0;
    color: #0d0d0d;
    font-size: 12px;
    font-style: normal;
    font-weight: 600;
    left: -1px;
    line-height: normal;
    padding: 0.1rem 0.3rem;
    position: absolute;
    top: -1.4em;
    user-select: none;
    white-space: nowrap;
  }

  /* Thread mark */
  .tiptap-thread,
  .tiptap-thread * {
    transition: all 0.2s cubic-bezier(0.65, 0.05, 0.36, 1);
  }

  .tiptap-thread[data-type='block'] {
    &:first-child {
      margin-top: 0;
    }

    > :not(p, h1, h2, h3, h4, h5, h6, ul, li) {
      outline-width: 2px;
      outline-color: transparent;
      outline-style: dashed;
    }
  }
}

/* Comments & Threads */
body {
  overflow: hidden;

  .main {
    height: 100vh;
    overflow: auto;
  }

  .sidebar {
    width: 20rem;

    @media (max-width: 540px) {
      padding-bottom: 0;
      width: 100%;
    }
  }
}

.threads-group {
  align-self: stretch;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin: 0 -1rem;
  overflow: auto;
  padding: 0 1rem;

  @media (max-width: 540px) {
    margin: 0 -1.5rem;
    max-height: 40vh;
    padding: 0 1.5rem 1.5rem;
    width: calc(100% + 3rem);
  }

  .thread {
    border-radius: 0.5rem;
    box-shadow: 0px 0px 0px 1px var(--gray-3) inset;
    display: flex;
    flex-direction: column;
    transition: all 0.2s cubic-bezier(0.65, 0.05, 0.36, 1);

    &.is-active,
    &:hover {
      box-shadow: 0px 0px 0px 1px var(--gray-4) inset;
    }

    &.is-open {
      box-shadow: 0px 0px 0px 1px var(--purple) inset;
    }

    /* Thread header */
    .header-group {
      border-bottom: 1px solid var(--gray-3);
      padding: 0.375rem 0.5rem;

      button {
        background-color: unset;

        &:hover {
          background-color: var(--gray-2);
        }
      }
    }

    /* Hint */
    .hint {
      align-items: center;
      background-color: var(--yellow-light);
      border: 1px solid var(--gray-2);
      border-radius: 0.5rem;
      display: flex;
      flex-direction: row;
      font-size: 0.75rem;
      gap: 0.5rem;
      line-height: 1.15;
      min-height: 1.75rem;
      padding: 0.25rem 0.5rem;
      margin: 0.8rem 0.8rem 0;
    }

    /* Closed thread */
    &:not(.is-open) {
      .comments-group {
        .comment {
          &:not(:last-child) {
            padding-bottom: 0;
          }

          .comment-content {
            p {
              -webkit-box-orient: vertical;
              -webkit-line-clamp: 2;
              align-self: stretch;
              display: -webkit-box;
            }

            .button-group {
              display: none;
            }

            label {
              display: inherit;
            }
          }
        }

        .comments-count {
          margin-top: 0.2rem;
        }
      }
    }

    /* Comments */
    .comments-group {
      display: flex;
      flex-direction: column;
      padding: 0.8rem;

      .comment {
        display: flex;
        flex-direction: column;
        gap: 0.125rem;

        &.deleted {
          opacity: 0.5;
        }

        &:not(:first-child) {
          border-top: 1px solid var(--gray-3);
          padding-top: 0.75rem;
        }

        &:not(:last-child) {
          padding-bottom: 0.75rem;
        }

        .comment-edit {
          padding: unset;
        }

        .comment-content {
          display: flex;
          flex-direction: column;
          gap: 0.625rem;
        }
      }
    }
  }

  /* Basic styling */
  button {
    font-size: 0.75rem;
    padding: 0.25rem 0.375rem;
    border-radius: 0.375rem;
  }

  .button-group {
    gap: 0.125rem;
  }

  label {
    color: var(--gray-5);
    font-size: 0.75rem;
    font-weight: 400;
  }

  p {
    font-size: 0.75rem;
    line-height: 1.4;
    margin: 0;
    overflow: hidden;
  }

  .label-group {
    column-gap: 0.25rem;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

    label:not(:first-child)::before {
      content: '·';
      padding-right: 0.25rem;
    }

    label:first-of-type {
      font-weight: 700;
      color: var(--black);
    }
  }

  /* Reply input styling */
  .reply-group,
  .comment-edit {
    display: flex;
    flex-direction: column;
    gap: 0.375rem;
    padding: 0.2rem 0.8rem 0.8rem;

    textarea {
      height: 4.5rem;
      resize: none;
      padding: 0.375rem 0.625rem;
      line-height: 1.3;
      width: 100%;

      &:focus,
      &:focus-visible {
        border-color: var(--black);
      }
    }

    .flex-row {
      column-gap: 0.5rem;
      row-gap: 0.25rem;
    }
  }

  .reply-group {
    &:not(:has(textarea:focus)) {
      .flex-row {
        display: none;
      }
    }

    textarea:placeholder-shown:not(:focus) {
      height: 2rem;
    }

    textarea:not(:placeholder-shown) {
      height: 4.5rem;
    }

    &:has(textarea:not(:placeholder-shown)) {
      .flex-row {
        display: flex;
      }
    }
  }
}

/* Structue */
.col-group {
  display: flex;
  flex-direction: row;

  @media (max-width: 540px) {
    flex-direction: column-reverse;
  }
}

.main {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.sidebar {
  border-left: 1px solid var(--gray-3);
  flex-grow: 0;
  flex-shrink: 0;
  padding: 1rem;
  width: 15rem;
  position: sticky;
  height: 100vh;
  top: 0;
  width: 20rem;

  @media (max-width: 540px) {
    border-bottom: 1px solid var(--gray-3);
    border-left: unset;
    width: 100%;
    height: auto;
    position: unset;
    padding: 1.5rem;
  }
}

.sidebar-options {
  align-items: flex-start;
  display: flex;
  flex-direction: column;
  height: 100%;
  gap: 1rem;
  position: sticky;
  top: 1rem;
}

.option-group {
  align-items: flex-start;
  display: flex;
  flex-direction: column;
  gap: 0.625rem;
  width: 100%;

  form {
    width: 100%;

    input {
      width: 100%;
    }
  }
}

[data-viewmode='open'] .tiptap {
  .tiptap-thread[data-status-all='open'] {
    &[data-type='block'] {
      > :not(p, h1, h2, h3, h4, h5, h6, ul, li) {
        background-color: var(--yellow);
        outline-color: var(--yellow);
      }

      &:hover,
      &[data-state='selected'],
      &[data-state='hovered'] {
        > :not(p, h1, h2, h3, h4, h5, h6, ul, li) {
          background-color: var(--yellow-contrast);
          outline-color: var(--yellow-contrast);
        }
      }
    }

    &[data-type='inline'] {
      border-bottom: 2px dashed var(--yellow-contrast);

      &:hover,
      &[data-state='selected'],
      &[data-state='hovered'] {
        background-color: var(--yellow);
      }
    }
  }
}

[data-viewmode='resolved'] .tiptap {
  .tiptap-thread[data-status='closed'] {
    &[data-type='block'] {
      > :not(p, h1, h2, h3, h4, h5, h6, ul, li) {
        background-color: var(--yellow);
        outline-color: var(--yellow);
      }

      &:hover,
      &[data-state='selected'],
      &[data-state='hovered'] {
        > :not(p, h1, h2, h3, h4, h5, h6, ul, li) {
          background-color: var(--yellow-contrast);
          outline-color: var(--yellow-contrast);
        }
      }
    }

    &[data-type='inline'] {
      border-bottom: 2px dashed var(--yellow-contrast);

      &:hover,
      &[data-state='selected'],
      &[data-state='hovered'] {
        background-color: var(--yellow);
      }
    }
  }
}

[data-viewmode='open'] .tiptap .tiptap-thread:not([data-status='closed']),
[data-viewmode='resolved'] .tiptap .tiptap-thread:not([data-status='open']) {
  &[data-type='block'] {
    > :not(p, h1, h2, h3, h4, h5, h6, ul, li) {
      background-color: var(--yellow);
      outline-color: var(--yellow);
    }

    &:hover,
    &[data-state='selected'],
    &[data-state='hovered'] {
      > :not(p, h1, h2, h3, h4, h5, h6, ul, li) {
        background-color: var(--yellow-contrast);
        outline-color: var(--yellow-contrast);
      }
    }
  }

  &[data-type='inline'] {
    border-bottom: 2px dashed var(--yellow-contrast);

    &:hover,
    &[data-state='selected'],
    &[data-state='hovered'] {
      background-color: var(--yellow);
    }
  }
}
